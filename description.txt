### Styled-components
- npm i styled-components
- props는 컴포넌트에 데이터를 보내는 방법이다. 
- theme이란 기본적으로 모든 색상들을 가지고 있는 object이다. 모든 색깔을 하나의 object안에 넣어놨기 때문에 매우 유용하다. 
- dark/light 모드를 가지고 싶다면, property들의 이름이 같아야한다.

### TypeScript
- TypeScript는 JavaScript를 기반으로 한 프로그래밍 언어이다. 
- TypeScript는 strongly-typed 언어이다. 
- strongly-typed란 프로그래밍 언어가 작동하기 전에 type을 확인을 한다는 것이다.
- 코드에 실수가 있어도, 프로그램이 작동하기 전에 TypeScript가 우리에게 알려준다.
- 브라우저가 이해할수 있는 유일한 프로그래밍 언어는 JavaScript이기 때문에 사용자에게 publish 할때 TypeScript가 compile해서 평범한 JavaScript로 만들어준다.
- Prop Types는 prop이 거기에 있는지 없는지 확인을 해주지만, 코드를 실행한 "후"에만 확인이 가능하다. 
- 우리가 TypeScript를 사용하는 이유는 코드가 실행되기 "전"에 오류를 확인하기 위해서이다. 
- 그렇기 때문에 Prop Types를 사용하지 않고 prop들을 TypeScript로 보호해준다. 
- interface란 object shape(객체모양)을 TypeScript에게 설명해주는 TypeScript의 개념이다. 즉, interfaces는 object를 설명해주는것이다.
- default props / optional props
- borderColor?: string는 borderColor : string | undefined 와 같은 의미이다. 
- useState에서 number와 string을 모두 사용하고 싶다면 useState<number | string>(); 이렇게 명시해주면된다.
- TypeScript와 styled-components연결 
- npm install @types/styled-components
- styled.d.ts파일 생성

### CRYPTO TRACKER
- React Query는 편리한 방식으로 데이터를 fetch시킬수 있다.
- npm i react-router-dom@5.3.0
- npm i react-query
- react-router-dom은 어플리케이션에 URL를 가질수 있도록 해주고 기본적으로 각기 다른 화면을 갖도록 해준다.
- createGlobalStyle는 한 컴포넌트를 만들수 있게 해주는데 렌더링 될 때, 그 컴포넌트는 전역 스코프에 스타일을 올려준다.
- useEffect 함수를 사용하면 코드가 component의 시작할때 실행될지, component가 끝날때 실행될지 또한 뭐든 변화가 일어날때 실행할지를 고를수 있다.
- component의 시작에서만 코드를 실행하고 싶다면 useEffect의 함수 뒤에 []를 붙여줘야 한다. (코드를 한번만 실행하고 싶다면 no dependencies([])를 사용해야한다)
- []안에 다른 무언가를 넣었을때 그 무언가가 변경이 되면 useEffect도 다시 실행이 된다. 
- 하지만 hooks는 최선의 성능을 위해서는 hook안에서 사용한 것은 그게 어떤것이든 여기 dependency([])에 넣어야한다고 한다.
- 그렇기 때문에 이 hooks에서 coinId라고 불리는것을 사용하고 있다고 알려주고 있는것이다. 하지만 coinId는 URL에 위치하고 있어서 절대로 변하지 않는다. 
-Nested router는 route안에 있는 route이다. 
- useRouteMatch라는 hook은 유저가 특정한 URL에 있는지의 여부를 알려주게 된다. 만약 선택한 URL에 들어가 있다면 object를 받는다. 들어가 있지 않다면 null을 받는다.
- react query는 데이터를 캐시에 저장해두기 때문에 갔던 url에 다시 돌아와도 로딩을 하지 않는다.
- APEXCHARTS는 자바스크립트 chart library이다. 
- npm install --save react-apexcharts apexcharts
- react-query 3번째 인자에 refetchInterval를 사용하면 해당 시간동안 refetch할때마다 코인의 가격을 바꿔준다. 
- react의 제목을 바꾸기 위해 npm i react-helmet 설치 
- react-helmet는 component인데 무엇을 render하던 그게 문서의 head로 가는것이다.
- 코드챌린지 => 
1. 홈으로 가는 버튼 만들기 
2. price탭에서 좀더 많은 가격의 정보를 보여주기 
3. 만들었던 line chart를 Candlestick chart로 변경(참고 : https://apexcharts.com/react-chart-demos/candlestick-charts/basic/)